{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "First Name is Ovais\n",
      "Last Name is ur Rehman\n",
      "Age is 24\n",
      "City is Karachi\n",
      "______________________\n",
      "First Name is Ovais\n",
      "Last Name is ur Rehman\n",
      "Age is 24\n",
      "City is Karachi\n",
      "Qualification is Intermediate\n",
      "______________________\n",
      "First Name is Ovais\n",
      "Last Name is ur Rehman\n",
      "Age is 24\n",
      "City is Karachi\n",
      "Qualification is Bachelor\n",
      "______________________\n",
      "______________________\n",
      "First Name is Ovais\n",
      "Last Name is ur Rehman\n",
      "Age is 24\n",
      "City is Karachi\n"
     ]
    }
   ],
   "source": [
    "person = {\"First Name\": \"Ovais\",\n",
    "         \"Last Name\": \"ur Rehman\",\n",
    "         \"Age\": 24,\n",
    "         \"City\": \"Karachi\"}\n",
    "for i in person.keys():\n",
    "    print(i,\"is\" , person[i])\n",
    "#print(person)\n",
    "\n",
    "print(\"______________________\")\n",
    "\n",
    "person[\"Qualification\"] = \"Intermediate\"\n",
    "\n",
    "for i in person.keys():\n",
    "    print(i,\"is\" , person[i])\n",
    "\n",
    "print(\"______________________\")\n",
    "\n",
    "person[\"Qualification\"] = \"Bachelor\"\n",
    "\n",
    "for i in person.keys():\n",
    "    print(i,\"is\" , person[i])\n",
    "\n",
    "print(\"______________________\")\n",
    "\n",
    "del person[\"Qualification\"]\n",
    "\n",
    "print(\"______________________\")\n",
    "\n",
    "for i in person.keys():\n",
    "    print(i,\"is\" , person[i])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " City Name: Karachi \n",
      " Country Name: Pakistan \n",
      " Population: 15741000 \n",
      " Fact: Karachi is the city of many cultures. \n",
      "\n",
      " City Name: Toronto \n",
      " Country Name: Canada \n",
      " Population: 6139000 \n",
      " Fact: Toronto is Canada's largest city. \n",
      "\n",
      " City Name: Sydney \n",
      " Country Name: Australlia \n",
      " Population: 5000000 \n",
      " Fact: Sydney has an opera house. \n",
      "\n"
     ]
    }
   ],
   "source": [
    "cities = { \"Karachi\":{\"Pakistan\":(15741000,\"Karachi is the city of many cultures.\")},\n",
    "         \"Toronto\":{\"Canada\":(6139000,\"Toronto is Canada's largest city.\")},\n",
    "          \"Sydney\":{\"Australlia\":(5000000,\"Sydney has an opera house.\")}\n",
    "         }\n",
    "\n",
    "for i in cities.keys():\n",
    "    for j in cities[i].keys():\n",
    "        #print(i,j)\n",
    "        print(\" City Name:\",i,\"\\n Country Name:\",j, \"\\n Population:\" ,cities[i][j][0],\"\\n Fact:\", cities[i][j][1], \"\\n\")\n",
    "    #print(cities[i])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter Age: 2\n",
      "the ticket is free \n",
      "\n",
      "Enter Age: 8\n",
      "the ticket is $10 \n",
      "\n",
      "Enter Age: 56\n",
      "the ticket is $15 \n",
      "\n",
      "Enter Age: 15\n",
      "the ticket is $15 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "for i in range(0,4):\n",
    "    age = int(input(\"Enter Age: \"))\n",
    "    if age<3:\n",
    "        print(\"the ticket is free \\n\")\n",
    "    elif age>=3 and age<=12:\n",
    "        print(\"the ticket is $10 \\n\")\n",
    "    else:\n",
    "        print(\"the ticket is $15 \\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "one of my favourite book is harry potter\n"
     ]
    }
   ],
   "source": [
    "def favourite_book(title):\n",
    "    print(\"one of my favourite book is \" + title)\n",
    "    \n",
    "    \n",
    "title = \"harry potter\"\n",
    "favourite_book(title)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Enter number: 28\n",
      "\n",
      " you guessed greater\n",
      "\n",
      " Enter number: 22\n",
      "\n",
      " you guessed greater\n",
      "\n",
      " Enter number: 18\n",
      "\n",
      " you guessed greater\n",
      "\n",
      " you failed\n",
      "\n",
      " Randon Number was 12\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "\n",
    "rand = random.randint(1,31)\n",
    "for i in range(0,3):\n",
    "    guess = int(input(\"\\n Enter number: \"))\n",
    "    if guess == rand:\n",
    "        print(\"\\n congratulations, you win\")\n",
    "        break\n",
    "    elif guess > rand:\n",
    "        print(\"\\n you guessed greater\")\n",
    "    else:\n",
    "        print(\"\\n you guessed lesser\")\n",
    "    if i == 2:\n",
    "        print(\"\\n you failed\")\n",
    "    \n",
    "    \n",
    "print(\"\\n Randon Number was\",rand)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
